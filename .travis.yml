git:
  submodules: false

before_install:
  - git submodule update --init

matrix:
  include:
    # GUI - Electron
    - language: node_js
      node_js: '12'
      name: Desktop Frontend, Linux
      cache: npm
      services:
        - xvfb
      before_install:
        - npm install -g npm
      install: &node_install
        - npm --version
        - node --version
        - cd gui
        - npm ci
      script: &node_script
        - npm run lint
        - npm run build
        - npm test

    - os: windows
      language: node_js
      node_js: '12'
      name: Desktop Frontend, Windows
      cache: npm
      before_install:
        # npm fails to upgrade itself if just doing `npm install -g npm`. See this issue:
        # https://travis-ci.community/t/command-npm-i-g-npm-latest-fails/431/5
        - node `npm prefix -g`/node_modules/npm/bin/npm-cli.js i -g npm@latest
      install: *node_install
      script: *node_script

    # iOS
    - language: swift
      osx_image: xcode12.2
      xcode_project: ios/MullvadVPN.xcodeproj
      xcode_scheme: MullvadVPNTests
      xcode_destination: platform=iOS Simulator,OS=14.2,name=iPhone 8

    # Daemon - macOS
    - language: rust
      rust: stable
      name: Daemon, macOS - stable Rust
      os: osx
      before_script:
        - env
        # installing Go
        - curl -s https://dl.google.com/go/go1.16.darwin-amd64.pkg --output go-installer.pkg
        - echo "2906bd8e6bf60d0e15d2e771318ed382f67da88509bb86f9b21018022ab788b1 go-installer.pkg" | sha256sum -c
        - sudo installer -pkg ./go-installer.pkg -target /
        - export PATH="/usr/local/go/bin:$PATH"
      script:
        - ./ci/ci-rust-script.sh stable

    # Daemon - Linux
    - os: linux
      name: Daemon, Linux - nightly Rust
      language: minimal
      dist: xenial
      services: docker
      before_script: &rust_before_script
        - docker --version
        # --privileged is required because nightly cargo uses statx instead of stat, and that
        # syscall is so new that it's not on the docker whitelist yet.
        # https://github.com/rust-lang/rust/issues/65662
        - docker run -d --privileged --name mvd-build -v $(pwd):/travis -w /travis quay.io/mullvad/mullvadvpn-app-build@sha256:bdccd0bd76929509f1fb979f4cbf5065f92434d988241debf5f319f6896d51d8 tail -f /dev/null
        - docker ps
      script:
        - docker exec -t mvd-build bash ci/ci-rust-script.sh nightly

    - os: linux
      name: Daemon, Linux - beta Rust
      language: minimal
      dist: xenial
      services: docker
      before_script: *rust_before_script
      script:
        - docker exec -t mvd-build bash ci/ci-rust-script.sh beta

    - os: linux
      name: Daemon, Linux - stable Rust
      language: minimal
      dist: xenial
      services: docker
      before_script: *rust_before_script
      script:
        - docker exec -t mvd-build bash ci/ci-rust-script.sh stable

    # Daemon - Windows
    - os: windows
      name: Daemon, Windows - stable Rust
      env: RUST_VERSION=stable
      language: shell
      before_install: &rust_windows_before_install
        - curl -s https://download.visualstudio.microsoft.com/download/pr/57d28351-e762-4ee1-aca4-16b6d3faaa33/34fa4c9bb790f310c908ff59071949289dc3ed503bcb44723c2e0b360c51ebab/vs_BuildTools.exe --output vs_BuildTools.exe
        - echo "34fa4c9bb790f310c908ff59071949289dc3ed503bcb44723c2e0b360c51ebab vs_BuildTools.exe" | sha256sum -c
        - ./vs_BuildTools.exe --wait -q --norestart --add Microsoft.VisualStudio.Workload.VCTools\;includeRecommended --add Microsoft.Component.MSBuild
        - git submodule update --init
        # Installing Go
        - curl -s https://dl.google.com/go/go1.16.windows-amd64.msi --output go-installer.msi
        - echo "0fd550a74f6c8ef5df405751f5e39a0ba25786930c5d61503bf71d3c3efa2414 go-installer.msi" | sha256sum -c
        - cmd.exe '/c msiexec /i go-installer.msi /quiet /qn'
        - export PATH="/c/Program Files/Go/bin/:$PATH"
      script: &rust_windows_script
        - ./ci/ci-rust-script.sh $RUST_VERSION

    - os: windows
      name: Daemon, Windows - beta Rust
      env: RUST_VERSION=beta
      language: shell
      before_install: *rust_windows_before_install
      script: *rust_windows_script

  allow_failures:
    - name: Desktop Frontend, Windows

notifications:
  email:
    on_success: never
    on_failure: never
